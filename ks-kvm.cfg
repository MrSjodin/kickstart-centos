#version=0.5

# System authorization information
auth --enableshadow --passalgo=sha512
# Use network installation
url --url="http://mirror.centos.org/centos/7/os/x86_64"
# Use install type (graphical/text)
text
# Accept the EULA
eula --agreed
ignoredisk --only-use=sda
# Reboot after installation
reboot
# Keyboard layouts
keyboard --vckeymap=se --xlayouts='se','us'
# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate

# Other repositories
repo --name=docker-ce-stable --baseurl=https://download.docker.com/linux/centos/7/x86_64/stable/
repo --name=epel --baseurl=http://dl.fedoraproject.org/pub/epel/7/x86_64/
repo --name=centos-extras --mirrorlist=http://mirrorlist.centos.org/?release=7&arch=x86_64&repo=extras
repo --name=webmin --mirrorlist=https://download.webmin.com/download/yum/mirrorlist

# Firewall setup
firewall --enabled --ssh

# Root password and user/group creation
rootpw --iscrypted $6$Qu1EYXsjhzCNAqw0$eaXb5z2RbYoR1Ip5S7n7xw0jR48WRp4M3UWP8J146LkuAJw7GjB5VxY2M3b4fpUxo.jOoFW.Zv7uTVWmvcEiZ.
#user --name=username --groups=groups --homedir=/home/username --iscrypted --password=$6$dwMGcAQtvqzmPO5W$xFZqLvZSfMrS89Pa.XbRbsVCCTfUQZwdsX/mPqOUfHziLg2tfJKknO61CN8lxx79ESC9pDLB55ZtT67q96Blk0
#group --name=name [--gid=gid]

# System services
services --enabled="chronyd"
# System timezone
timezone Europe/Stockholm --isUtc
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
# Partition clearing information
clearpart --all --initlabel --drives=sda
# Disk partitioning information
part /boot/efi --fstype="efi" --ondisk=sda --size=200 --fsoptions="umask=0077,shortname=winnt"
part /boot --fstype="xfs" --ondisk=sda --size=1024
part pv.316 --fstype="lvmpv" --ondisk=sda --size=87040 --grow
volgroup centos --pesize=4096 pv.316
logvol swap  --fstype="swap" --size=3072 --name=swap --vgname=centos
logvol /  --fstype="xfs" --size=150 --name=root --vgname=centos
logvol /home  --fstype="xfs" --size=512 --name=home --vgname=centos
logvol /usr  --fstype="xfs" --size=3072 --name=usr --vgname=centos
logvol /usr/share  --fstype="xfs" --size=2560 --name=usr_share --vgname=centos
logvol /var  --fstype="xfs" --size=1536 --name=var --vgname=centos
logvol /var/log  --fstype="xfs" --size=512 --name=var_log --vgname=centos
logvol /var/lib/libvirt/boot --fstype="xfs" --size=20480 --name=var_lib_libvirt_boot --vgname=centos
logvol /var/lib/libvirt/images --fstype="xfs" --size=51200 --name=var_lib_libvirt_images --vgname=centos

%packages --ignoremissing
@^minimal
@core
-iptables
-postfix
-abrt-libs
-abrt-tui
-abrt-cli
-abrt
-abrt-addon-python
-abrt-addon-ccpp
-abrt-addon-kerneloops
-iprutils
-fprintd-pam
-intltool
-aic94xx-firmware
-iwl100-firmware
-iwl105-firmware
-iwl135-firmware
-iwl1000-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-libertas-usb8388-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
crypto-utils
kexec-tools
net-tools
net-snmp-utils
telnet
traceroute
vim
sysstat
usbutils
unzip
ntp
wget
#
# KVM
qemu-kvm
qemu-kvm-tools
libvirt
libvirt-python
libguestfs-tools
virt-install
#
# Webmin
webmin

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=16 --minquality=1 --strict --changesok --notempty
pwpolicy user --minlen=12 --minquality=1 --strict --changesok --emptyok
pwpolicy luks --minlen=12 --minquality=1 --strict --nochanges --notempty
%end

%include /tmp/network.txt

%pre
#!/bin/sh
exec < /dev/tty3 > /dev/tty3 2>&1
chvt 3
hn=""

while [ "$hn" == "" ]; do
 clear
 echo "========= Installation of KVM Virtualization Host ========="
 echo ""
 echo "The installation is automatic and will install and"
 echo "activate KVM. After reboot, you're ready to connect"
 echo "and administer the host by using:"
 echo ""
 echo "Console:"
 echo "  - User....: root"
 echo "  - Password: (From template or the one you supply later)"
 echo ""
 echo "Webmin:"
 echo "  - https://dhcp.ip.address:10000"
 echo "  - User....: root"
 echo "  - Password: (From template or the one you supply later)"
 echo ""
 echo "!! Don't forget to install Cloudmin, installation script !!"
 echo "!! be downloaded to /root/cloudmin-kvm-redhat-install.sh !!"
 echo ""
 echo ""
 echo ""
 echo "IMPORTANT NOTE:"
 echo "---------------"
 echo "As default, it is NOT possible for the created virtual"
 echo "machines to connect outside the hypervisor. To enable that"
 echo "you need to add the following line to the network interface"
 echo "file (ie. /etc/sysconfig/network-scripts/ifcfg-eth0):"
 echo ""
 echo "BRIDGE=br0"
 echo ""
 echo ""
 echo ""
 echo " *** Please enter the following details: *** "
 echo

 read -p "Hostname (fqdn): " hn
done
clear
chvt 1
echo "network --hostname ${hn}" > /tmp/network.txt
%end

%post --log=/root/ks-post.log

mv /etc/ntp.conf /etc/ntp.conf.dist

cat >> /etc/ntp.conf <<EOF
driftfile /var/lib/ntp/ntp.drift
server 0.pool.ntp.org
server 1.pool.ntp.org
server 2.pool.ntp.org
server pool.ntp.org
EOF

cat >> /usr/local/sbin/systemupdate.sh <<EOF
#!/bin/sh
#
# System Update Script
#
# Log to:
logfile=/var/log/systemupdate.log
#
#####################################################################
/bin/echo \$(date) >> \$logfile
/usr/bin/yum update -y >> \$logfile
/usr/bin/yum clean all -y >> \$logfile
/bin/echo "Rebooting after 2 minutes wait..." >> \$logfile
/usr/sbin/shutdown --reboot +2 "Rebooting after system update in 2 minutes... Use shutdown -c to cancel..." >> \$logfile
/bin/echo "------------------------------------------------------------------------------" >> \$logfile
EOF

chmod 0755 /usr/local/sbin/systemupdate.sh

cat >> /etc/sysconfig/network-scripts/ifcfg-br0 <<EOF
DEVICE="br0"
# I am getting ip from DHCP server #
BOOTPROTO="dhcp"
IPV6INIT="yes"
IPV6_AUTOCONF="yes"
ONBOOT="yes"
TYPE="Bridge"
DELAY="0"
EOF

cat >> /etc/crontab <<EOF
# Uncomment below line to enable scheduled updates
#0 3 * * 0	root	/usr/local/sbin/systemupdate.sh
@reboot root /bin/bash /root/firstboot.sh
EOF

cat >> /root/firstboot.sh <<EOF
systemctl enable ntpd
systemctl start ntpd
systemctl enable libvirtd
systemctl start libvirtd
#
# Open firewall extra ports
firewall-cmd --zone=public --permanent --add-port=5901/tcp
firewall-cmd --zone=public --permanent --add-port=10000/tcp
firewall-cmd --reload
#
# Remove unwanted Webmin modules
systemctl stop webmin
rm -rf /usr/libexec/webmin/adsl-client
rm -rf /usr/libexec/webmin/ajaxterm
rm -rf /usr/libexec/webmin/apache
rm -rf /usr/libexec/webmin/at
rm -rf /usr/libexec/webmin/bacula-backup
rm -rf /usr/libexec/webmin/bandwidth
rm -rf /usr/libexec/webmin/bind8
rm -rf /usr/libexec/webmin/burner
rm -rf /usr/libexec/webmin/dhcpd
rm -rf /usr/libexec/webmin/dovecot
rm -rf /usr/libexec/webmin/exports
rm -rf /usr/libexec/webmin/fail2ban
rm -rf /usr/libexec/webmin/fetchmail
rm -rf /usr/libexec/webmin/firewall
rm -rf /usr/libexec/webmin/firewall6
rm -rf /usr/libexec/webmin/grub
rm -rf /usr/libexec/webmin/heartbeat
rm -rf /usr/libexec/webmin/htaccess-htpasswd
rm -rf /usr/libexec/webmin/idmapd
rm -rf /usr/libexec/webmin/inittab
rm -rf /usr/libexec/webmin/inetd
rm -rf /usr/libexec/webmin/ipfw
rm -rf /usr/libexec/webmin/ipsec
rm -rf /usr/libexec/webmin/iscsi-client
rm -rf /usr/libexec/webmin/iscsi-server
rm -rf /usr/libexec/webmin/iscsi-target
rm -rf /usr/libexec/webmin/iscsi-tgtd
rm -rf /usr/libexec/webmin/jabber
rm -rf /usr/libexec/webmin/ldap-client
rm -rf /usr/libexec/webmin/ldap-server
rm -rf /usr/libexec/webmin/ldap-useradmin
rm -rf /usr/libexec/webmin/lpadmin
rm -rf /usr/libexec/webmin/mailboxes
rm -rf /usr/libexec/webmin/mailcap
rm -rf /usr/libexec/webmin/mon
rm -rf /usr/libexec/webmin/mysql
rm -rf /usr/libexec/webmin/nis
rm -rf /usr/libexec/webmin/openslp
rm -rf /usr/libexec/webmin/pap
rm -rf /usr/libexec/webmin/phpini
rm -rf /usr/libexec/webmin/postfix
rm -rf /usr/libexec/webmin/postgresql
rm -rf /usr/libexec/webmin/ppp-client
rm -rf /usr/libexec/webmin/pptp-client
rm -rf /usr/libexec/webmin/pptp-server
rm -rf /usr/libexec/webmin/procmail
rm -rf /usr/libexec/webmin/proftpd
rm -rf /usr/libexec/webmin/qmailadmin
rm -rf /usr/libexec/webmin/quota
rm -rf /usr/libexec/webmin/raid
rm -rf /usr/libexec/webmin/samba
rm -rf /usr/libexec/webmin/sarg
rm -rf /usr/libexec/webmin/sendmail
rm -rf /usr/libexec/webmin/shorewall
rm -rf /usr/libexec/webmin/shorewall6
rm -rf /usr/libexec/webmin/smart-status
rm -rf /usr/libexec/webmin/spam
rm -rf /usr/libexec/webmin/squid
rm -rf /usr/libexec/webmin/stunnel
rm -rf /usr/libexec/webmin/syslog-ng
rm -rf /usr/libexec/webmin/tcpwrappers
rm -rf /usr/libexec/webmin/telnet
rm -rf /usr/libexec/webmin/tunnel
rm -rf /usr/libexec/webmin/usermin
rm -rf /usr/libexec/webmin/vgetty
rm -rf /usr/libexec/webmin/webalizer
rm -rf /usr/libexec/webmin/wuftpd
rm -rf /usr/libexec/webmin/xinetd
rm -rf /usr/libexec/webmin/cluster-*
rm -rf /etc/webmin/adsl-client
rm -rf /etc/webmin/ajaxterm
rm -rf /etc/webmin/apache
rm -rf /etc/webmin/at
rm -rf /etc/webmin/bacula-backup
rm -rf /etc/webmin/bandwidth
rm -rf /etc/webmin/bind8
rm -rf /etc/webmin/burner
rm -rf /etc/webmin/dhcpd
rm -rf /etc/webmin/dovecot
rm -rf /etc/webmin/exports
rm -rf /etc/webmin/fail2ban
rm -rf /etc/webmin/fetchmail
rm -rf /etc/webmin/firewall
rm -rf /etc/webmin/firewall6
rm -rf /etc/webmin/grub
rm -rf /etc/webmin/heartbeat
rm -rf /etc/webmin/htaccess-htpasswd
rm -rf /etc/webmin/idmapd
rm -rf /etc/webmin/inittab
rm -rf /etc/webmin/inetd
rm -rf /etc/webmin/ipfw
rm -rf /etc/webmin/ipsec
rm -rf /etc/webmin/iscsi-client
rm -rf /etc/webmin/iscsi-server
rm -rf /etc/webmin/iscsi-target
rm -rf /etc/webmin/iscsi-tgtd
rm -rf /etc/webmin/jabber
rm -rf /etc/webmin/ldap-client
rm -rf /etc/webmin/ldap-server
rm -rf /etc/webmin/ldap-useradmin
rm -rf /etc/webmin/lpadmin
rm -rf /etc/webmin/mailboxes
rm -rf /etc/webmin/mailcap
rm -rf /etc/webmin/mon
rm -rf /etc/webmin/mysql
rm -rf /etc/webmin/nis
rm -rf /etc/webmin/openslp
rm -rf /etc/webmin/pap
rm -rf /etc/webmin/phpini
rm -rf /etc/webmin/postfix
rm -rf /etc/webmin/postgresql
rm -rf /etc/webmin/ppp-client
rm -rf /etc/webmin/pptp-client
rm -rf /etc/webmin/pptp-server
rm -rf /etc/webmin/procmail
rm -rf /etc/webmin/proftpd
rm -rf /etc/webmin/qmailadmin
rm -rf /etc/webmin/quota
rm -rf /etc/webmin/raid
rm -rf /etc/webmin/samba
rm -rf /etc/webmin/sarg
rm -rf /etc/webmin/sendmail
rm -rf /etc/webmin/shorewall
rm -rf /etc/webmin/shorewall6
rm -rf /etc/webmin/smart-status
rm -rf /etc/webmin/spam
rm -rf /etc/webmin/squid
rm -rf /etc/webmin/stunnel
rm -rf /etc/webmin/syslog-ng
rm -rf /etc/webmin/tcpwrappers
rm -rf /etc/webmin/telnet
rm -rf /etc/webmin/tunnel
rm -rf /etc/webmin/usermin
rm -rf /etc/webmin/vgetty
rm -rf /etc/webmin/webalizer
rm -rf /etc/webmin/wuftpd
rm -rf /etc/webmin/xinetd
rm -rf /etc/webmin/cluster-*
systemctl start webmin
sleep 30
#
# Get Cloudmin installation
wget http://cloudmin.virtualmin.com/gpl/scripts/cloudmin-kvm-redhat-install.sh -O /root/cloudmin-kvm-redhat-install.sh
chmod +x /root/cloudmin-kvm-redhat-install.sh
#
# Perform an initial system update
/usr/local/sbin/systemupdate.sh
#
# Below to remove the script from crontab file and the script itself
/bin/cat /etc/crontab | /bin/grep -v firstboot > /etc/crontab.tmp
/bin/rm -f /etc/crontab
/bin/mv /etc/crontab.tmp /etc/crontab
rm -f \$0
EOF

rpm --import http://www.webmin.com/jcameron-key.asc

systemctl enable ntpd
systemctl disable postfix

%end
